/*
 * CORE API v2
 * <p style=\"text-align: justify;\">You can use the CORE API to access the      resources harvested and enriched by CORE. If you encounter any problems with the API, please <a href=\"/contact\">report them to us</a>.</p>  <h2>Overview</h2> <p style=\"text-align: justify;\">The API is organised by resource type. The resources are <b>articles</b>,      <b>journals</b> and <b>repositories</b> and are represented using JSON data format. Furthermore,      each resource has a list of methods. The API also provides two global methods for accessing all resources at once.</p>  <h2>Response format</h2> <p style=\"text-align: justify;\">Response for each query contains two fields: <b>status</b> and <b>data</b>.     In case of an error status, the data field is empty. The data field contains a single object     in case the request is for a specific identifier (e.g. CORE ID, CORE repository ID, etc.), or       contains a list of objects, for example for search queries. In case of batch requests, the response     is an array of objects, each of which contains its own <b>status</b> and <b>data</b> fields.     For search queries the response contains an additional field <b>totalHits</b>, which is the      total number of items which match the search criteria.</p>  <h2>Search query syntax</h2>  <p style=\"text-align: justify\">Complex search queries can be used in all of the API search methods.     The query can be a simple string or it can be built using terms and operators described in Elasticsearch     <a href=\"http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\">documentation</a>.     The usable field names are <strong>title</strong>, <strong>description</strong>, <strong>fullText</strong>,      <strong>authorsString</strong>, <strong>publisher</strong>, <strong>repositories.id</strong>, <strong>repositories.name</strong>,      <strong>doi</strong>, <strong>oai</strong>, <strong>identifiers</strong> (which is a list of article identifiers including OAI, URL, etc.), <strong>language.name</strong>      and <strong>year</strong>. Some example queries: </p>  <ul style=\"margin-left: 30px;\">     <li><p>title:psychology and language.name:English</p></li>     <li><p>repositories.id:86 AND year:2014</p></li>     <li><p>identifiers:\"oai:aura.abdn.ac.uk:2164/3837\" OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"</p></li>     <li><p>doi:\"10.1186/1471-2458-6-309\"</p></li> </ul>  <h2>Sort order</h2>  <p style=\"text-align: justify;\">For search queries, the results are ordered by relevance score. For batch      requests, the results are retrieved in the order of the requests.</p>  <h2>Parameters</h2> <p style=\"text-align: justify;\">The API methods allow different parameters to be passed. Additionally, there is an API key parameter which is common to all API methods. For all API methods      the API key can be provided either as a query parameter or in the request header. If the API key      is not provided, the API will return HTTP 401 error. You can register for an API key <a href=\"/services#api\">here</a>.</p>  <h2>API methods</h2>
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.mrdlib.partnerContentManager.core.model;

import java.util.Objects;




import org.mrdlib.partnerContentManager.core.model.ArticleJournal;
import org.mrdlib.partnerContentManager.core.model.Citation;
import org.mrdlib.partnerContentManager.core.model.Language;
import org.mrdlib.partnerContentManager.core.model.RawRecordXml;
import org.mrdlib.partnerContentManager.core.model.Repository;
import org.mrdlib.partnerContentManager.core.model.Similar;
import java.util.ArrayList;
import java.util.List;

/**
 * Article
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-10T16:43:47.568+09:00")
public class Article {

  private Integer id = null;


  private List<String> authors = new ArrayList<String>();


  private List<Citation> citations = new ArrayList<Citation>();


  private List<String> contributors = new ArrayList<String>();


  private String datePublished = null;


  private String description = null;


  private String fulltext = null;


  private List<String> identifiers = new ArrayList<String>();


  private List<ArticleJournal> journals = new ArrayList<ArticleJournal>();


  private Language language = null;


  private String publisher = null;


  private List<String> relations = new ArrayList<String>();


  private List<Repository> repositories = new ArrayList<Repository>();



  private List<Similar> similarities = new ArrayList<Similar>();


  private List<String> subjects = new ArrayList<String>();


  private String title = null;


  private List<String> topics = new ArrayList<String>();


  private List<String> types = new ArrayList<String>();


  private Integer year = null;


  private List<String> fulltextUrls = new ArrayList<String>();


  private RawRecordXml rawRecordXml = null;


  private String fulltextIdentifier = null;


  private String doi = null;


  private String oai = null;

  public Article id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Article ID
   * @return id
  **/

  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Article authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public Article addAuthorsItem(String authorsItem) {
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * List of article authors
   * @return authors
  **/

  public List<String> getAuthors() {
    return authors;
  }

  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }

  public Article citations(List<Citation> citations) {
    this.citations = citations;
    return this;
  }

  public Article addCitationsItem(Citation citationsItem) {
    this.citations.add(citationsItem);
    return this;
  }

   /**
   * Citations found in the article
   * @return citations
  **/

  public List<Citation> getCitations() {
    return citations;
  }

  public void setCitations(List<Citation> citations) {
    this.citations = citations;
  }

  public Article contributors(List<String> contributors) {
    this.contributors = contributors;
    return this;
  }

  public Article addContributorsItem(String contributorsItem) {
    this.contributors.add(contributorsItem);
    return this;
  }

   /**
   * List of article contributors
   * @return contributors
  **/

  public List<String> getContributors() {
    return contributors;
  }

  public void setContributors(List<String> contributors) {
    this.contributors = contributors;
  }

  public Article datePublished(String datePublished) {
    this.datePublished = datePublished;
    return this;
  }

   /**
   * Date article published
   * @return datePublished
  **/

  public String getDatePublished() {
    return datePublished;
  }

  public void setDatePublished(String datePublished) {
    this.datePublished = datePublished;
  }

  public Article description(String description) {
    this.description = description;
    return this;
  }

   /**
   * The abstract
   * @return description
  **/

  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Article fulltext(String fulltext) {
    this.fulltext = fulltext;
    return this;
  }

   /**
   * Article full text
   * @return fulltext
  **/

  public String getFulltext() {
    return fulltext;
  }

  public void setFulltext(String fulltext) {
    this.fulltext = fulltext;
  }

  public Article identifiers(List<String> identifiers) {
    this.identifiers = identifiers;
    return this;
  }

  public Article addIdentifiersItem(String identifiersItem) {
    this.identifiers.add(identifiersItem);
    return this;
  }

   /**
   * List of document identifiers
   * @return identifiers
  **/

  public List<String> getIdentifiers() {
    return identifiers;
  }

  public void setIdentifiers(List<String> identifiers) {
    this.identifiers = identifiers;
  }

  public Article journals(List<ArticleJournal> journals) {
    this.journals = journals;
    return this;
  }

  public Article addJournalsItem(ArticleJournal journalsItem) {
    this.journals.add(journalsItem);
    return this;
  }

   /**
   * List of journals this article belongs to
   * @return journals
  **/

  public List<ArticleJournal> getJournals() {
    return journals;
  }

  public void setJournals(List<ArticleJournal> journals) {
    this.journals = journals;
  }

  public Article language(Language language) {
    this.language = language;
    return this;
  }

   /**
   * Language of the article
   * @return language
  **/

  public Language getLanguage() {
    return language;
  }

  public void setLanguage(Language language) {
    this.language = language;
  }

  public Article publisher(String publisher) {
    this.publisher = publisher;
    return this;
  }

   /**
   * Publisher of the article
   * @return publisher
  **/

  public String getPublisher() {
    return publisher;
  }

  public void setPublisher(String publisher) {
    this.publisher = publisher;
  }

  public Article relations(List<String> relations) {
    this.relations = relations;
    return this;
  }

  public Article addRelationsItem(String relationsItem) {
    this.relations.add(relationsItem);
    return this;
  }

   /**
   * URLs of relating articles, etc.
   * @return relations
  **/

  public List<String> getRelations() {
    return relations;
  }

  public void setRelations(List<String> relations) {
    this.relations = relations;
  }

  public Article repositories(List<Repository> repositories) {
    this.repositories = repositories;
    return this;
  }

  public Article addRepositoriesItem(Repository repositoriesItem) {
    this.repositories.add(repositoriesItem);
    return this;
  }

   /**
   * List of repositories this article belongs to
   * @return repositories
  **/

  public List<Repository> getRepositories() {
    return repositories;
  }

  public void setRepositories(List<Repository> repositories) {
    this.repositories = repositories;
  }


  public Article similarities(List<Similar> similarities) {
    this.similarities = similarities;
    return this;
  }

  public Article addSimilaritiesItem(Similar similaritiesItem) {
    this.similarities.add(similaritiesItem);
    return this;
  }

   /**
   * Similar articles
   * @return similarities
  **/

  public List<Similar> getSimilarities() {
    return similarities;
  }

  public void setSimilarities(List<Similar> similarities) {
    this.similarities = similarities;
  }

  public Article subjects(List<String> subjects) {
    this.subjects = subjects;
    return this;
  }

  public Article addSubjectsItem(String subjectsItem) {
    this.subjects.add(subjectsItem);
    return this;
  }

   /**
   * Article subjects
   * @return subjects
  **/

  public List<String> getSubjects() {
    return subjects;
  }

  public void setSubjects(List<String> subjects) {
    this.subjects = subjects;
  }

  public Article title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Article title
   * @return title
  **/

  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Article topics(List<String> topics) {
    this.topics = topics;
    return this;
  }

  public Article addTopicsItem(String topicsItem) {
    this.topics.add(topicsItem);
    return this;
  }

   /**
   * Article topics
   * @return topics
  **/

  public List<String> getTopics() {
    return topics;
  }

  public void setTopics(List<String> topics) {
    this.topics = topics;
  }

  public Article types(List<String> types) {
    this.types = types;
    return this;
  }

  public Article addTypesItem(String typesItem) {
    this.types.add(typesItem);
    return this;
  }

   /**
   * Types, e.g. conference paper, journal paper, etc.
   * @return types
  **/

  public List<String> getTypes() {
    return types;
  }

  public void setTypes(List<String> types) {
    this.types = types;
  }

  public Article year(Integer year) {
    this.year = year;
    return this;
  }

   /**
   * Year the article was published
   * @return year
  **/

  public Integer getYear() {
    return year;
  }

  public void setYear(Integer year) {
    this.year = year;
  }

  public Article fulltextUrls(List<String> fulltextUrls) {
    this.fulltextUrls = fulltextUrls;
    return this;
  }

  public Article addFulltextUrlsItem(String fulltextUrlsItem) {
    this.fulltextUrls.add(fulltextUrlsItem);
    return this;
  }

   /**
   * URLs of the fulltext version of this article
   * @return fulltextUrls
  **/

  public List<String> getFulltextUrls() {
    return fulltextUrls;
  }

  public void setFulltextUrls(List<String> fulltextUrls) {
    this.fulltextUrls = fulltextUrls;
  }

  public Article rawRecordXml(RawRecordXml rawRecordXml) {
    this.rawRecordXml = rawRecordXml;
    return this;
  }

   /**
   * Raw XML metadata
   * @return rawRecordXml
  **/

  public RawRecordXml getRawRecordXml() {
    return rawRecordXml;
  }

  public void setRawRecordXml(RawRecordXml rawRecordXml) {
    this.rawRecordXml = rawRecordXml;
  }

  public Article fulltextIdentifier(String fulltextIdentifier) {
    this.fulltextIdentifier = fulltextIdentifier;
    return this;
  }

   /**
   * The URL to the fulltext
   * @return fulltextIdentifier
  **/

  public String getFulltextIdentifier() {
    return fulltextIdentifier;
  }

  public void setFulltextIdentifier(String fulltextIdentifier) {
    this.fulltextIdentifier = fulltextIdentifier;
  }

  public Article doi(String doi) {
    this.doi = doi;
    return this;
  }

   /**
   * The DOI of the article
   * @return doi
  **/

  public String getDoi() {
    return doi;
  }

  public void setDoi(String doi) {
    this.doi = doi;
  }

  public Article oai(String oai) {
    this.oai = oai;
    return this;
  }

   /**
   * The OAI of the article
   * @return oai
  **/

  public String getOai() {
    return oai;
  }

  public void setOai(String oai) {
    this.oai = oai;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Article article = (Article) o;
    return Objects.equals(this.id, article.id) &&
        Objects.equals(this.authors, article.authors) &&
        Objects.equals(this.citations, article.citations) &&
        Objects.equals(this.contributors, article.contributors) &&
        Objects.equals(this.datePublished, article.datePublished) &&
        Objects.equals(this.description, article.description) &&
        Objects.equals(this.fulltext, article.fulltext) &&
        Objects.equals(this.identifiers, article.identifiers) &&
        Objects.equals(this.journals, article.journals) &&
        Objects.equals(this.language, article.language) &&
        Objects.equals(this.publisher, article.publisher) &&
        Objects.equals(this.relations, article.relations) &&
        Objects.equals(this.repositories, article.repositories) &&
        Objects.equals(this.similarities, article.similarities) &&
        Objects.equals(this.subjects, article.subjects) &&
        Objects.equals(this.title, article.title) &&
        Objects.equals(this.topics, article.topics) &&
        Objects.equals(this.types, article.types) &&
        Objects.equals(this.year, article.year) &&
        Objects.equals(this.fulltextUrls, article.fulltextUrls) &&
        Objects.equals(this.rawRecordXml, article.rawRecordXml) &&
        Objects.equals(this.fulltextIdentifier, article.fulltextIdentifier) &&
        Objects.equals(this.doi, article.doi) &&
        Objects.equals(this.oai, article.oai);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, authors, citations, contributors, datePublished, description, fulltext, identifiers, journals, language, publisher, relations, repositories, similarities, subjects, title, topics, types, year, fulltextUrls, rawRecordXml, fulltextIdentifier, doi, oai);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Article {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    citations: ").append(toIndentedString(citations)).append("\n");
    sb.append("    contributors: ").append(toIndentedString(contributors)).append("\n");
    sb.append("    datePublished: ").append(toIndentedString(datePublished)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    fulltext: ").append(toIndentedString(fulltext)).append("\n");
    sb.append("    identifiers: ").append(toIndentedString(identifiers)).append("\n");
    sb.append("    journals: ").append(toIndentedString(journals)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    publisher: ").append(toIndentedString(publisher)).append("\n");
    sb.append("    relations: ").append(toIndentedString(relations)).append("\n");
    sb.append("    repositories: ").append(toIndentedString(repositories)).append("\n");
    sb.append("    similarities: ").append(toIndentedString(similarities)).append("\n");
    sb.append("    subjects: ").append(toIndentedString(subjects)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("    fulltextUrls: ").append(toIndentedString(fulltextUrls)).append("\n");
    sb.append("    rawRecordXml: ").append(toIndentedString(rawRecordXml)).append("\n");
    sb.append("    fulltextIdentifier: ").append(toIndentedString(fulltextIdentifier)).append("\n");
    sb.append("    doi: ").append(toIndentedString(doi)).append("\n");
    sb.append("    oai: ").append(toIndentedString(oai)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

