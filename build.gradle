// root project to build server
// plugin dependencies
plugins {
    id 'java'
    id 'war'
    id 'org.akhikhl.gretty' version '2.0.0'
}
// source code location for main project
sourceSets.main.java.srcDirs = ['src/main/java']
sourceSets.test.java.srcDirs = ['src/test/java']

allprojects {
    repositories {
        jcenter()
    }
}

// server
gretty {
    servletContainer 'tomcat8'
    enableNaming true // enable JNDI in tomcat
}

ext {
    jackson_version = "2.7.5"
    junit_version = "4.12"
    mockito_version = "2.8.47"
}

dependencies {
    gretty 'org.apache.tomcat:tomcat-dbcp:8.0.23' // tomcat does not bring this
    compile 'org.apache.tika:tika-parsers:1.15' // for language detection
    // json
    compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"

    compile fileTree(dir: 'lib', include: '*.jar')
    providedCompile 'javax.servlet:javax.servlet-api:3.1.0' 
    testCompile "junit:junit:$junit_version"
    testCompile "org.mockito:mockito-core:$mockito_version"  
}

// create subprojects for e.g. jars for importers
// to build an additional jar, do this:
// 1. create a subfolder at root level (like languageDetection)
// 2. add a build.gradle file
// 3. Insert two lines of code: 
//      apply plugin: 'application'
//      mainClassName = '...'

// shared rules
subprojects {
    apply plugin: 'java'
    // relative location from subproject folder
    dependencies {
        // json
        compile "com.fasterxml.jackson.core:jackson-core:$jackson_version"
        compile "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
        compile "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
        // server libraries not needed
        compile fileTree(dir: '../lib', include: '*.jar')
        compile 'org.apache.tika:tika-parsers:1.15' // for language detection
    }
    sourceSets.main.java.srcDirs = ['../src/main/java']
    sourceSets.main.resources.srcDirs = ['../src/main/resources']
}